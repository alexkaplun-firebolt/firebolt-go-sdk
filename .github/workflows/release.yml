name: Release new version

on:
  workflow_dispatch:
    inputs:
      pre-release-tag:
        required: false
        description: 'Tag for pre-release (optional)'
      major-release:
        required: false
        description: 'Trigger a major release (optional). Leave empty for regular release.'

jobs:
#  integration-tests:
#    uses: ./.github/workflows/integration-tests.yml
#    secrets:
#      FIREBOLT_USERNAME: ${{ secrets.FIREBOLT_USERNAME }}
#      FIREBOLT_PASSWORD: ${{ secrets.FIREBOLT_PASSWORD }}

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
#    needs: integration-tests
    steps:    
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install argparse build semver twine
      shell: bash
   
    - name: Setup git config
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
      shell: bash

    - name: Checkout action repo
      uses: actions/checkout@v2
      with:
        repository: firebolt-db/action-python-release
        path: release_action

    - name: Generate new version tag
      id: tag_generation
      run: |
        OLD_TAG=$(git describe --tags --abbrev=0)
        OLD_VERSION=$(echo $OLD_TAG | cut -c 2-)
        echo "Old tag was ${OLD_TAG}"
        CHANGE_LOG=$(git log $OLD_TAG..HEAD --pretty=format:%s)
        NEW_VERSION=$(python3 release_action/scripts/generate_version_tag.py "${CHANGE_LOG}" $OLD_VERSION --prerelease_tag "${{ inputs.pre-release-tag }}" --major_release "${{ inputs.major-release }}")
        NEW_TAG="v"$NEW_VERSION
        echo "::set-output name=new_tag::$NEW_TAG"
        echo "::set-output name=new_version::$NEW_VERSION"
      shell: bash

    - name: Version bump
      run: |
        # Bump version = <number> in version file
        sed -i "s/sdkVersion string = .*/sdkVersion string = \"${{ steps.tag_generation.outputs.new_version }}\"/g" version.go
        git add version.go
        git commit -m "Automatic version bump to ${{ steps.tag_generation.outputs.new_tag }}"
        git push origin main
      shell: bash
        
    - name: Publish tag on github
      run: |
        git tag ${{ steps.tag_generation.outputs.new_tag }}
        git push origin ${{ steps.tag_generation.outputs.new_tag }}
      shell: bash
        
#    - name: Release on github
#      uses: softprops/action-gh-release@v1
#      with:
#        tag_name: ${{ steps.tag_generation.outputs.new_tag }}
#        generate_release_notes: true
#        prerelease: ${{ inputs.pre-release-tag != '' }} 
